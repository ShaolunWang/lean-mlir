
"builtin.module"()(
 {
  ^entry:
   "func.func"()(
    {
     ^bb0(%arg0:vector<2xf32>):
      %0="memref.alloc"(){
       operand_segment_sizes = dense<0>:vector<2xi32>
       , test.ptr = "alloc"
       }:() -> vector<8x64xf32>
      "memref.dealloc"(%0){test.ptr = "dealloc"}:(vector<8x64xf32>) -> ()
      "func.return"(){test.ptr = "return"}:() -> ()
    }){
    function_type = (vector<2xf32>) -> ()
    , sym_name = "no_side_effects"
    , test.ptr = "func"
    }:() -> ()
 }):() -> ()
"builtin.module"()(
 {
  ^entry:
   "func.func"()(
    {
     ^bb0(%arg0:vector<xi32>,%arg1:i32):
      %0="memref.alloca"(){
       operand_segment_sizes = dense<0>:vector<2xi32>
       , test.ptr = "alloc"
       }:() -> vector<xi32>
      "memref.store"(%arg1,%0){test.ptr = "store"}:(i32,vector<xi32>) -> ()
      %1="memref.load"(%0){test.ptr = "load"}:(vector<xi32>) -> i32
      "func.return"(){test.ptr = "return"}:() -> ()
    }){
    function_type = (vector<xi32>,i32) -> ()
    , sym_name = "simple"
    , test.ptr = "func"
    }:() -> ()
 }):() -> ()
"builtin.module"()(
 {
  ^entry:
   "func.func"()(
    {
     ^bb0(%arg0:vector<xi32>,%arg1:vector<xi32>,%arg2:i32):
      "memref.store"(%arg2,%arg1){test.ptr = "store"}:(i32,vector<xi32>) -> ()
      %0="memref.load"(%arg1){test.ptr = "load"}:(vector<xi32>) -> i32
      "func.return"(){test.ptr = "return"}:() -> ()
    }){
    function_type = (vector<xi32>,vector<xi32>,i32) -> ()
    , sym_name = "mayalias"
    , test.ptr = "func"
    }:() -> ()
 }):() -> ()
"builtin.module"()(
 {
  ^entry:
   "func.func"()(
    {
     ^bb0(%arg0:vector<xi32>,%arg1:vector<xi32>,%arg2:i1,%arg3:i32):
      %0="memref.alloca"(){
       operand_segment_sizes = dense<0>:vector<2xi32>
       , test.ptr = "alloc"
       }:() -> vector<xi32>
      "scf.if"(%arg2)(
       {
        ^entry:
         "memref.store"(%arg3,%arg0):(i32,vector<xi32>) -> ()
         %1="memref.load"(%arg0):(vector<xi32>) -> i32
         "scf.yield"():() -> ()
       }
       {
       }){test.ptr = "if"}:(i1) -> ()
      "func.return"(){test.ptr = "return"}:() -> ()
    }){
    function_type = (vector<xi32>,vector<xi32>,i1,i32) -> ()
    , sym_name = "recursive"
    , test.ptr = "func"
    }:() -> ()
 }):() -> ()
"builtin.module"()(
 {
  ^entry:
   "func.func"()(
    {
     ^bb0(%arg0:vector<xi32>):
      "foo.op"(){test.ptr = "unknown"}:() -> ()
      "func.return"():() -> ()
    }){
    function_type = (vector<xi32>) -> ()
    , sym_name = "unknown"
    , test.ptr = "func"
    }:() -> ()
 }):() -> ()